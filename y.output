Terminals unused in grammar

    STOP
    ESCAPE


State 31 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 $@2: ε

    3 program: $@1 stmts $@2

    4 stmts: stmts stmt
    5      | stmt

    6 add_exp: mul_exp
    7        | add_exp ADD add_exp
    8        | add_exp SUB add_exp

    9 mul_exp: exp
   10        | mul_exp MUL mul_exp
   11        | mul_exp DIV mul_exp

   12 exp: NUM
   13    | SUB exp
   14    | L_PAREN add_exp R_PAREN
   15    | rel_exp
   16    | function_call
   17    | IDENTIFIER
   18    | IDENTIFIER LB add_exp RB

   19 rel_exp: exp REL exp

   20 stmt: assignment
   21     | WRITE L_PAREN IDENTIFIER R_PAREN SEMICOLON
   22     | READ L_PAREN IDENTIFIER R_PAREN SEMICOLON
   23     | declaration
   24     | when_stmt
   25     | whilst_stmt
   26     | dowhilst_stmt
   27     | function
   28     | return_stmt

   29 return_stmt: RETURN SEMICOLON
   30            | RETURN add_exp SEMICOLON

   31 $@3: ε

   32 $@4: ε

   33 when_stmt: WHEN L_PAREN add_exp R_PAREN $@3 LC stmts RC $@4 else_stmt

   34 $@5: ε

   35 else_stmt: ELSE $@5 LC stmts RC

   36 $@6: ε

   37 whilst_stmt: WHILST L_PAREN add_exp R_PAREN $@6 LC stmts RC

   38 dowhilst_stmt: DO LC stmts RC WHILST exp
   39              | DO LC RC WHILST exp

   40 $@7: ε

   41 function: type IDENTIFIER QM param_type_list $@7 QM LC stmts RC

   42 function_call: IDENTIFIER QM param_list QM

   43 param_type_list: type IDENTIFIER COMMA param_type_list
   44                | type IDENTIFIER LB RB COMMA param_type_list
   45                | type IDENTIFIER
   46                | type IDENTIFIER LB RB

   47 param_list: add_exp COMMA
   48           | add_exp
   49           | ε

   50 type: VOID
   51     | INT

   52 declaration: type IDENTIFIER SEMICOLON
   53            | type IDENTIFIER LB NUM RB SEMICOLON

   54 assignment: IDENTIFIER ASSIGN add_exp SEMICOLON
   55           | IDENTIFIER LB add_exp RB ASSIGN add_exp SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <identifier> (258) 12 53
    IDENTIFIER <identifier> (259) 17 18 21 22 41 42 43 44 45 46 52 53 54 55
    L_PAREN (260) 14 21 22 33 37
    R_PAREN (261) 14 21 22 33 37
    LC (262) 33 35 37 38 39 41
    RC (263) 33 35 37 38 39 41
    RB (264) 18 44 46 53 55
    LB (265) 18 44 46 53 55
    WHEN (266) 33
    ELSE (267) 35
    WHILST (268) 37 38 39
    DO (269) 38 39
    STOP (270)
    READ (271) 22
    WRITE (272) 21
    VOID (273) 50
    INT (274) 51
    RETURN (275) 29 30
    ASSIGN (276) 54 55
    QM (277) 41 42
    ESCAPE (278)
    SEMICOLON (279) 21 22 29 30 52 53 54 55
    COMMA (280) 43 44 47
    ADD (281) 7
    SUB (282) 8 13
    MUL (283) 10
    DIV (284) 11
    REL <identifier> (285) 19


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 3
        on right: 0
    $@1 (33)
        on left: 1
        on right: 3
    $@2 (34)
        on left: 2
        on right: 3
    stmts (35)
        on left: 4 5
        on right: 3 4 33 35 37 38 41
    add_exp <identifier> (36)
        on left: 6 7 8
        on right: 7 8 14 18 30 33 37 47 48 54 55
    mul_exp <identifier> (37)
        on left: 9 10 11
        on right: 6 10 11
    exp <identifier> (38)
        on left: 12 13 14 15 16 17 18
        on right: 9 13 19 38 39
    rel_exp <identifier> (39)
        on left: 19
        on right: 15
    stmt (40)
        on left: 20 21 22 23 24 25 26 27 28
        on right: 4 5
    return_stmt (41)
        on left: 29 30
        on right: 28
    when_stmt (42)
        on left: 33
        on right: 24
    $@3 (43)
        on left: 31
        on right: 33
    $@4 (44)
        on left: 32
        on right: 33
    else_stmt (45)
        on left: 35
        on right: 33
    $@5 (46)
        on left: 34
        on right: 35
    whilst_stmt <identifier> (47)
        on left: 37
        on right: 25
    $@6 (48)
        on left: 36
        on right: 37
    dowhilst_stmt (49)
        on left: 38 39
        on right: 26
    function (50)
        on left: 41
        on right: 27
    $@7 (51)
        on left: 40
        on right: 41
    function_call <identifier> (52)
        on left: 42
        on right: 16
    param_type_list (53)
        on left: 43 44 45 46
        on right: 41 43 44
    param_list (54)
        on left: 47 48 49
        on right: 42
    type (55)
        on left: 50 51
        on right: 41 43 44 45 46 52 53
    declaration (56)
        on left: 52 53
        on right: 23
    assignment (57)
        on left: 54 55
        on right: 20


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    3 program: $@1 • stmts $@2

    IDENTIFIER  shift, and go to state 4
    WHEN        shift, and go to state 5
    WHILST      shift, and go to state 6
    DO          shift, and go to state 7
    READ        shift, and go to state 8
    WRITE       shift, and go to state 9
    VOID        shift, and go to state 10
    INT         shift, and go to state 11
    RETURN      shift, and go to state 12

    stmts          go to state 13
    stmt           go to state 14
    return_stmt    go to state 15
    when_stmt      go to state 16
    whilst_stmt    go to state 17
    dowhilst_stmt  go to state 18
    function       go to state 19
    type           go to state 20
    declaration    go to state 21
    assignment     go to state 22


State 3

    0 $accept: program $end •

    $default  accept


State 4

   54 assignment: IDENTIFIER • ASSIGN add_exp SEMICOLON
   55           | IDENTIFIER • LB add_exp RB ASSIGN add_exp SEMICOLON

    LB      shift, and go to state 23
    ASSIGN  shift, and go to state 24


State 5

   33 when_stmt: WHEN • L_PAREN add_exp R_PAREN $@3 LC stmts RC $@4 else_stmt

    L_PAREN  shift, and go to state 25


State 6

   37 whilst_stmt: WHILST • L_PAREN add_exp R_PAREN $@6 LC stmts RC

    L_PAREN  shift, and go to state 26


State 7

   38 dowhilst_stmt: DO • LC stmts RC WHILST exp
   39              | DO • LC RC WHILST exp

    LC  shift, and go to state 27


State 8

   22 stmt: READ • L_PAREN IDENTIFIER R_PAREN SEMICOLON

    L_PAREN  shift, and go to state 28


State 9

   21 stmt: WRITE • L_PAREN IDENTIFIER R_PAREN SEMICOLON

    L_PAREN  shift, and go to state 29


State 10

   50 type: VOID •

    $default  reduce using rule 50 (type)


State 11

   51 type: INT •

    $default  reduce using rule 51 (type)


State 12

   29 return_stmt: RETURN • SEMICOLON
   30            | RETURN • add_exp SEMICOLON

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SEMICOLON   shift, and go to state 33
    SUB         shift, and go to state 34

    add_exp        go to state 35
    mul_exp        go to state 36
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39


State 13

    3 program: $@1 stmts • $@2
    4 stmts: stmts • stmt

    IDENTIFIER  shift, and go to state 4
    WHEN        shift, and go to state 5
    WHILST      shift, and go to state 6
    DO          shift, and go to state 7
    READ        shift, and go to state 8
    WRITE       shift, and go to state 9
    VOID        shift, and go to state 10
    INT         shift, and go to state 11
    RETURN      shift, and go to state 12

    $default  reduce using rule 2 ($@2)

    $@2            go to state 40
    stmt           go to state 41
    return_stmt    go to state 15
    when_stmt      go to state 16
    whilst_stmt    go to state 17
    dowhilst_stmt  go to state 18
    function       go to state 19
    type           go to state 20
    declaration    go to state 21
    assignment     go to state 22


State 14

    5 stmts: stmt •

    $default  reduce using rule 5 (stmts)


State 15

   28 stmt: return_stmt •

    $default  reduce using rule 28 (stmt)


State 16

   24 stmt: when_stmt •

    $default  reduce using rule 24 (stmt)


State 17

   25 stmt: whilst_stmt •

    $default  reduce using rule 25 (stmt)


State 18

   26 stmt: dowhilst_stmt •

    $default  reduce using rule 26 (stmt)


State 19

   27 stmt: function •

    $default  reduce using rule 27 (stmt)


State 20

   41 function: type • IDENTIFIER QM param_type_list $@7 QM LC stmts RC
   52 declaration: type • IDENTIFIER SEMICOLON
   53            | type • IDENTIFIER LB NUM RB SEMICOLON

    IDENTIFIER  shift, and go to state 42


State 21

   23 stmt: declaration •

    $default  reduce using rule 23 (stmt)


State 22

   20 stmt: assignment •

    $default  reduce using rule 20 (stmt)


State 23

   55 assignment: IDENTIFIER LB • add_exp RB ASSIGN add_exp SEMICOLON

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    add_exp        go to state 43
    mul_exp        go to state 36
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39


State 24

   54 assignment: IDENTIFIER ASSIGN • add_exp SEMICOLON

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    add_exp        go to state 44
    mul_exp        go to state 36
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39


State 25

   33 when_stmt: WHEN L_PAREN • add_exp R_PAREN $@3 LC stmts RC $@4 else_stmt

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    add_exp        go to state 45
    mul_exp        go to state 36
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39


State 26

   37 whilst_stmt: WHILST L_PAREN • add_exp R_PAREN $@6 LC stmts RC

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    add_exp        go to state 46
    mul_exp        go to state 36
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39


State 27

   38 dowhilst_stmt: DO LC • stmts RC WHILST exp
   39              | DO LC • RC WHILST exp

    IDENTIFIER  shift, and go to state 4
    RC          shift, and go to state 47
    WHEN        shift, and go to state 5
    WHILST      shift, and go to state 6
    DO          shift, and go to state 7
    READ        shift, and go to state 8
    WRITE       shift, and go to state 9
    VOID        shift, and go to state 10
    INT         shift, and go to state 11
    RETURN      shift, and go to state 12

    stmts          go to state 48
    stmt           go to state 14
    return_stmt    go to state 15
    when_stmt      go to state 16
    whilst_stmt    go to state 17
    dowhilst_stmt  go to state 18
    function       go to state 19
    type           go to state 20
    declaration    go to state 21
    assignment     go to state 22


State 28

   22 stmt: READ L_PAREN • IDENTIFIER R_PAREN SEMICOLON

    IDENTIFIER  shift, and go to state 49


State 29

   21 stmt: WRITE L_PAREN • IDENTIFIER R_PAREN SEMICOLON

    IDENTIFIER  shift, and go to state 50


State 30

   12 exp: NUM •

    $default  reduce using rule 12 (exp)


State 31

   17 exp: IDENTIFIER •
   18    | IDENTIFIER • LB add_exp RB
   42 function_call: IDENTIFIER • QM param_list QM

    LB  shift, and go to state 51
    QM  shift, and go to state 52

    QM        [reduce using rule 17 (exp)]
    $default  reduce using rule 17 (exp)


State 32

   14 exp: L_PAREN • add_exp R_PAREN

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    add_exp        go to state 53
    mul_exp        go to state 36
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39


State 33

   29 return_stmt: RETURN SEMICOLON •

    $default  reduce using rule 29 (return_stmt)


State 34

   13 exp: SUB • exp

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    exp            go to state 54
    rel_exp        go to state 38
    function_call  go to state 39


State 35

    7 add_exp: add_exp • ADD add_exp
    8        | add_exp • SUB add_exp
   30 return_stmt: RETURN add_exp • SEMICOLON

    SEMICOLON  shift, and go to state 55
    ADD        shift, and go to state 56
    SUB        shift, and go to state 57


State 36

    6 add_exp: mul_exp •
   10 mul_exp: mul_exp • MUL mul_exp
   11        | mul_exp • DIV mul_exp

    MUL  shift, and go to state 58
    DIV  shift, and go to state 59

    $default  reduce using rule 6 (add_exp)


State 37

    9 mul_exp: exp •
   19 rel_exp: exp • REL exp

    REL  shift, and go to state 60

    $default  reduce using rule 9 (mul_exp)


State 38

   15 exp: rel_exp •

    $default  reduce using rule 15 (exp)


State 39

   16 exp: function_call •

    $default  reduce using rule 16 (exp)


State 40

    3 program: $@1 stmts $@2 •

    $default  reduce using rule 3 (program)


State 41

    4 stmts: stmts stmt •

    $default  reduce using rule 4 (stmts)


State 42

   41 function: type IDENTIFIER • QM param_type_list $@7 QM LC stmts RC
   52 declaration: type IDENTIFIER • SEMICOLON
   53            | type IDENTIFIER • LB NUM RB SEMICOLON

    LB         shift, and go to state 61
    QM         shift, and go to state 62
    SEMICOLON  shift, and go to state 63


State 43

    7 add_exp: add_exp • ADD add_exp
    8        | add_exp • SUB add_exp
   55 assignment: IDENTIFIER LB add_exp • RB ASSIGN add_exp SEMICOLON

    RB   shift, and go to state 64
    ADD  shift, and go to state 56
    SUB  shift, and go to state 57


State 44

    7 add_exp: add_exp • ADD add_exp
    8        | add_exp • SUB add_exp
   54 assignment: IDENTIFIER ASSIGN add_exp • SEMICOLON

    SEMICOLON  shift, and go to state 65
    ADD        shift, and go to state 56
    SUB        shift, and go to state 57


State 45

    7 add_exp: add_exp • ADD add_exp
    8        | add_exp • SUB add_exp
   33 when_stmt: WHEN L_PAREN add_exp • R_PAREN $@3 LC stmts RC $@4 else_stmt

    R_PAREN  shift, and go to state 66
    ADD      shift, and go to state 56
    SUB      shift, and go to state 57


State 46

    7 add_exp: add_exp • ADD add_exp
    8        | add_exp • SUB add_exp
   37 whilst_stmt: WHILST L_PAREN add_exp • R_PAREN $@6 LC stmts RC

    R_PAREN  shift, and go to state 67
    ADD      shift, and go to state 56
    SUB      shift, and go to state 57


State 47

   39 dowhilst_stmt: DO LC RC • WHILST exp

    WHILST  shift, and go to state 68


State 48

    4 stmts: stmts • stmt
   38 dowhilst_stmt: DO LC stmts • RC WHILST exp

    IDENTIFIER  shift, and go to state 4
    RC          shift, and go to state 69
    WHEN        shift, and go to state 5
    WHILST      shift, and go to state 6
    DO          shift, and go to state 7
    READ        shift, and go to state 8
    WRITE       shift, and go to state 9
    VOID        shift, and go to state 10
    INT         shift, and go to state 11
    RETURN      shift, and go to state 12

    stmt           go to state 41
    return_stmt    go to state 15
    when_stmt      go to state 16
    whilst_stmt    go to state 17
    dowhilst_stmt  go to state 18
    function       go to state 19
    type           go to state 20
    declaration    go to state 21
    assignment     go to state 22


State 49

   22 stmt: READ L_PAREN IDENTIFIER • R_PAREN SEMICOLON

    R_PAREN  shift, and go to state 70


State 50

   21 stmt: WRITE L_PAREN IDENTIFIER • R_PAREN SEMICOLON

    R_PAREN  shift, and go to state 71


State 51

   18 exp: IDENTIFIER LB • add_exp RB

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    add_exp        go to state 72
    mul_exp        go to state 36
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39


State 52

   42 function_call: IDENTIFIER QM • param_list QM

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    $default  reduce using rule 49 (param_list)

    add_exp        go to state 73
    mul_exp        go to state 36
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39
    param_list     go to state 74


State 53

    7 add_exp: add_exp • ADD add_exp
    8        | add_exp • SUB add_exp
   14 exp: L_PAREN add_exp • R_PAREN

    R_PAREN  shift, and go to state 75
    ADD      shift, and go to state 56
    SUB      shift, and go to state 57


State 54

   13 exp: SUB exp •
   19 rel_exp: exp • REL exp

    $default  reduce using rule 13 (exp)


State 55

   30 return_stmt: RETURN add_exp SEMICOLON •

    $default  reduce using rule 30 (return_stmt)


State 56

    7 add_exp: add_exp ADD • add_exp

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    add_exp        go to state 76
    mul_exp        go to state 36
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39


State 57

    8 add_exp: add_exp SUB • add_exp

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    add_exp        go to state 77
    mul_exp        go to state 36
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39


State 58

   10 mul_exp: mul_exp MUL • mul_exp

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    mul_exp        go to state 78
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39


State 59

   11 mul_exp: mul_exp DIV • mul_exp

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    mul_exp        go to state 79
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39


State 60

   19 rel_exp: exp REL • exp

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    exp            go to state 80
    rel_exp        go to state 38
    function_call  go to state 39


State 61

   53 declaration: type IDENTIFIER LB • NUM RB SEMICOLON

    NUM  shift, and go to state 81


State 62

   41 function: type IDENTIFIER QM • param_type_list $@7 QM LC stmts RC

    VOID  shift, and go to state 10
    INT   shift, and go to state 11

    param_type_list  go to state 82
    type             go to state 83


State 63

   52 declaration: type IDENTIFIER SEMICOLON •

    $default  reduce using rule 52 (declaration)


State 64

   55 assignment: IDENTIFIER LB add_exp RB • ASSIGN add_exp SEMICOLON

    ASSIGN  shift, and go to state 84


State 65

   54 assignment: IDENTIFIER ASSIGN add_exp SEMICOLON •

    $default  reduce using rule 54 (assignment)


State 66

   33 when_stmt: WHEN L_PAREN add_exp R_PAREN • $@3 LC stmts RC $@4 else_stmt

    $default  reduce using rule 31 ($@3)

    $@3  go to state 85


State 67

   37 whilst_stmt: WHILST L_PAREN add_exp R_PAREN • $@6 LC stmts RC

    $default  reduce using rule 36 ($@6)

    $@6  go to state 86


State 68

   39 dowhilst_stmt: DO LC RC WHILST • exp

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    exp            go to state 87
    rel_exp        go to state 38
    function_call  go to state 39


State 69

   38 dowhilst_stmt: DO LC stmts RC • WHILST exp

    WHILST  shift, and go to state 88


State 70

   22 stmt: READ L_PAREN IDENTIFIER R_PAREN • SEMICOLON

    SEMICOLON  shift, and go to state 89


State 71

   21 stmt: WRITE L_PAREN IDENTIFIER R_PAREN • SEMICOLON

    SEMICOLON  shift, and go to state 90


State 72

    7 add_exp: add_exp • ADD add_exp
    8        | add_exp • SUB add_exp
   18 exp: IDENTIFIER LB add_exp • RB

    RB   shift, and go to state 91
    ADD  shift, and go to state 56
    SUB  shift, and go to state 57


State 73

    7 add_exp: add_exp • ADD add_exp
    8        | add_exp • SUB add_exp
   47 param_list: add_exp • COMMA
   48           | add_exp •

    COMMA  shift, and go to state 92
    ADD    shift, and go to state 56
    SUB    shift, and go to state 57

    $default  reduce using rule 48 (param_list)


State 74

   42 function_call: IDENTIFIER QM param_list • QM

    QM  shift, and go to state 93


State 75

   14 exp: L_PAREN add_exp R_PAREN •

    $default  reduce using rule 14 (exp)


State 76

    7 add_exp: add_exp • ADD add_exp
    7        | add_exp ADD add_exp •
    8        | add_exp • SUB add_exp

    $default  reduce using rule 7 (add_exp)


State 77

    7 add_exp: add_exp • ADD add_exp
    8        | add_exp • SUB add_exp
    8        | add_exp SUB add_exp •

    $default  reduce using rule 8 (add_exp)


State 78

   10 mul_exp: mul_exp • MUL mul_exp
   10        | mul_exp MUL mul_exp •
   11        | mul_exp • DIV mul_exp

    $default  reduce using rule 10 (mul_exp)


State 79

   10 mul_exp: mul_exp • MUL mul_exp
   11        | mul_exp • DIV mul_exp
   11        | mul_exp DIV mul_exp •

    $default  reduce using rule 11 (mul_exp)


State 80

   19 rel_exp: exp • REL exp
   19        | exp REL exp •

    $default  reduce using rule 19 (rel_exp)


State 81

   53 declaration: type IDENTIFIER LB NUM • RB SEMICOLON

    RB  shift, and go to state 94


State 82

   41 function: type IDENTIFIER QM param_type_list • $@7 QM LC stmts RC

    $default  reduce using rule 40 ($@7)

    $@7  go to state 95


State 83

   43 param_type_list: type • IDENTIFIER COMMA param_type_list
   44                | type • IDENTIFIER LB RB COMMA param_type_list
   45                | type • IDENTIFIER
   46                | type • IDENTIFIER LB RB

    IDENTIFIER  shift, and go to state 96


State 84

   55 assignment: IDENTIFIER LB add_exp RB ASSIGN • add_exp SEMICOLON

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    add_exp        go to state 97
    mul_exp        go to state 36
    exp            go to state 37
    rel_exp        go to state 38
    function_call  go to state 39


State 85

   33 when_stmt: WHEN L_PAREN add_exp R_PAREN $@3 • LC stmts RC $@4 else_stmt

    LC  shift, and go to state 98


State 86

   37 whilst_stmt: WHILST L_PAREN add_exp R_PAREN $@6 • LC stmts RC

    LC  shift, and go to state 99


State 87

   19 rel_exp: exp • REL exp
   39 dowhilst_stmt: DO LC RC WHILST exp •

    REL  shift, and go to state 60

    $default  reduce using rule 39 (dowhilst_stmt)


State 88

   38 dowhilst_stmt: DO LC stmts RC WHILST • exp

    NUM         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    L_PAREN     shift, and go to state 32
    SUB         shift, and go to state 34

    exp            go to state 100
    rel_exp        go to state 38
    function_call  go to state 39


State 89

   22 stmt: READ L_PAREN IDENTIFIER R_PAREN SEMICOLON •

    $default  reduce using rule 22 (stmt)


State 90

   21 stmt: WRITE L_PAREN IDENTIFIER R_PAREN SEMICOLON •

    $default  reduce using rule 21 (stmt)


State 91

   18 exp: IDENTIFIER LB add_exp RB •

    $default  reduce using rule 18 (exp)


State 92

   47 param_list: add_exp COMMA •

    $default  reduce using rule 47 (param_list)


State 93

   42 function_call: IDENTIFIER QM param_list QM •

    $default  reduce using rule 42 (function_call)


State 94

   53 declaration: type IDENTIFIER LB NUM RB • SEMICOLON

    SEMICOLON  shift, and go to state 101


State 95

   41 function: type IDENTIFIER QM param_type_list $@7 • QM LC stmts RC

    QM  shift, and go to state 102


State 96

   43 param_type_list: type IDENTIFIER • COMMA param_type_list
   44                | type IDENTIFIER • LB RB COMMA param_type_list
   45                | type IDENTIFIER •
   46                | type IDENTIFIER • LB RB

    LB     shift, and go to state 103
    COMMA  shift, and go to state 104

    $default  reduce using rule 45 (param_type_list)


State 97

    7 add_exp: add_exp • ADD add_exp
    8        | add_exp • SUB add_exp
   55 assignment: IDENTIFIER LB add_exp RB ASSIGN add_exp • SEMICOLON

    SEMICOLON  shift, and go to state 105
    ADD        shift, and go to state 56
    SUB        shift, and go to state 57


State 98

   33 when_stmt: WHEN L_PAREN add_exp R_PAREN $@3 LC • stmts RC $@4 else_stmt

    IDENTIFIER  shift, and go to state 4
    WHEN        shift, and go to state 5
    WHILST      shift, and go to state 6
    DO          shift, and go to state 7
    READ        shift, and go to state 8
    WRITE       shift, and go to state 9
    VOID        shift, and go to state 10
    INT         shift, and go to state 11
    RETURN      shift, and go to state 12

    stmts          go to state 106
    stmt           go to state 14
    return_stmt    go to state 15
    when_stmt      go to state 16
    whilst_stmt    go to state 17
    dowhilst_stmt  go to state 18
    function       go to state 19
    type           go to state 20
    declaration    go to state 21
    assignment     go to state 22


State 99

   37 whilst_stmt: WHILST L_PAREN add_exp R_PAREN $@6 LC • stmts RC

    IDENTIFIER  shift, and go to state 4
    WHEN        shift, and go to state 5
    WHILST      shift, and go to state 6
    DO          shift, and go to state 7
    READ        shift, and go to state 8
    WRITE       shift, and go to state 9
    VOID        shift, and go to state 10
    INT         shift, and go to state 11
    RETURN      shift, and go to state 12

    stmts          go to state 107
    stmt           go to state 14
    return_stmt    go to state 15
    when_stmt      go to state 16
    whilst_stmt    go to state 17
    dowhilst_stmt  go to state 18
    function       go to state 19
    type           go to state 20
    declaration    go to state 21
    assignment     go to state 22


State 100

   19 rel_exp: exp • REL exp
   38 dowhilst_stmt: DO LC stmts RC WHILST exp •

    REL  shift, and go to state 60

    $default  reduce using rule 38 (dowhilst_stmt)


State 101

   53 declaration: type IDENTIFIER LB NUM RB SEMICOLON •

    $default  reduce using rule 53 (declaration)


State 102

   41 function: type IDENTIFIER QM param_type_list $@7 QM • LC stmts RC

    LC  shift, and go to state 108


State 103

   44 param_type_list: type IDENTIFIER LB • RB COMMA param_type_list
   46                | type IDENTIFIER LB • RB

    RB  shift, and go to state 109


State 104

   43 param_type_list: type IDENTIFIER COMMA • param_type_list

    VOID  shift, and go to state 10
    INT   shift, and go to state 11

    param_type_list  go to state 110
    type             go to state 83


State 105

   55 assignment: IDENTIFIER LB add_exp RB ASSIGN add_exp SEMICOLON •

    $default  reduce using rule 55 (assignment)


State 106

    4 stmts: stmts • stmt
   33 when_stmt: WHEN L_PAREN add_exp R_PAREN $@3 LC stmts • RC $@4 else_stmt

    IDENTIFIER  shift, and go to state 4
    RC          shift, and go to state 111
    WHEN        shift, and go to state 5
    WHILST      shift, and go to state 6
    DO          shift, and go to state 7
    READ        shift, and go to state 8
    WRITE       shift, and go to state 9
    VOID        shift, and go to state 10
    INT         shift, and go to state 11
    RETURN      shift, and go to state 12

    stmt           go to state 41
    return_stmt    go to state 15
    when_stmt      go to state 16
    whilst_stmt    go to state 17
    dowhilst_stmt  go to state 18
    function       go to state 19
    type           go to state 20
    declaration    go to state 21
    assignment     go to state 22


State 107

    4 stmts: stmts • stmt
   37 whilst_stmt: WHILST L_PAREN add_exp R_PAREN $@6 LC stmts • RC

    IDENTIFIER  shift, and go to state 4
    RC          shift, and go to state 112
    WHEN        shift, and go to state 5
    WHILST      shift, and go to state 6
    DO          shift, and go to state 7
    READ        shift, and go to state 8
    WRITE       shift, and go to state 9
    VOID        shift, and go to state 10
    INT         shift, and go to state 11
    RETURN      shift, and go to state 12

    stmt           go to state 41
    return_stmt    go to state 15
    when_stmt      go to state 16
    whilst_stmt    go to state 17
    dowhilst_stmt  go to state 18
    function       go to state 19
    type           go to state 20
    declaration    go to state 21
    assignment     go to state 22


State 108

   41 function: type IDENTIFIER QM param_type_list $@7 QM LC • stmts RC

    IDENTIFIER  shift, and go to state 4
    WHEN        shift, and go to state 5
    WHILST      shift, and go to state 6
    DO          shift, and go to state 7
    READ        shift, and go to state 8
    WRITE       shift, and go to state 9
    VOID        shift, and go to state 10
    INT         shift, and go to state 11
    RETURN      shift, and go to state 12

    stmts          go to state 113
    stmt           go to state 14
    return_stmt    go to state 15
    when_stmt      go to state 16
    whilst_stmt    go to state 17
    dowhilst_stmt  go to state 18
    function       go to state 19
    type           go to state 20
    declaration    go to state 21
    assignment     go to state 22


State 109

   44 param_type_list: type IDENTIFIER LB RB • COMMA param_type_list
   46                | type IDENTIFIER LB RB •

    COMMA  shift, and go to state 114

    $default  reduce using rule 46 (param_type_list)


State 110

   43 param_type_list: type IDENTIFIER COMMA param_type_list •

    $default  reduce using rule 43 (param_type_list)


State 111

   33 when_stmt: WHEN L_PAREN add_exp R_PAREN $@3 LC stmts RC • $@4 else_stmt

    $default  reduce using rule 32 ($@4)

    $@4  go to state 115


State 112

   37 whilst_stmt: WHILST L_PAREN add_exp R_PAREN $@6 LC stmts RC •

    $default  reduce using rule 37 (whilst_stmt)


State 113

    4 stmts: stmts • stmt
   41 function: type IDENTIFIER QM param_type_list $@7 QM LC stmts • RC

    IDENTIFIER  shift, and go to state 4
    RC          shift, and go to state 116
    WHEN        shift, and go to state 5
    WHILST      shift, and go to state 6
    DO          shift, and go to state 7
    READ        shift, and go to state 8
    WRITE       shift, and go to state 9
    VOID        shift, and go to state 10
    INT         shift, and go to state 11
    RETURN      shift, and go to state 12

    stmt           go to state 41
    return_stmt    go to state 15
    when_stmt      go to state 16
    whilst_stmt    go to state 17
    dowhilst_stmt  go to state 18
    function       go to state 19
    type           go to state 20
    declaration    go to state 21
    assignment     go to state 22


State 114

   44 param_type_list: type IDENTIFIER LB RB COMMA • param_type_list

    VOID  shift, and go to state 10
    INT   shift, and go to state 11

    param_type_list  go to state 117
    type             go to state 83


State 115

   33 when_stmt: WHEN L_PAREN add_exp R_PAREN $@3 LC stmts RC $@4 • else_stmt

    ELSE  shift, and go to state 118

    else_stmt  go to state 119


State 116

   41 function: type IDENTIFIER QM param_type_list $@7 QM LC stmts RC •

    $default  reduce using rule 41 (function)


State 117

   44 param_type_list: type IDENTIFIER LB RB COMMA param_type_list •

    $default  reduce using rule 44 (param_type_list)


State 118

   35 else_stmt: ELSE • $@5 LC stmts RC

    $default  reduce using rule 34 ($@5)

    $@5  go to state 120


State 119

   33 when_stmt: WHEN L_PAREN add_exp R_PAREN $@3 LC stmts RC $@4 else_stmt •

    $default  reduce using rule 33 (when_stmt)


State 120

   35 else_stmt: ELSE $@5 • LC stmts RC

    LC  shift, and go to state 121


State 121

   35 else_stmt: ELSE $@5 LC • stmts RC

    IDENTIFIER  shift, and go to state 4
    WHEN        shift, and go to state 5
    WHILST      shift, and go to state 6
    DO          shift, and go to state 7
    READ        shift, and go to state 8
    WRITE       shift, and go to state 9
    VOID        shift, and go to state 10
    INT         shift, and go to state 11
    RETURN      shift, and go to state 12

    stmts          go to state 122
    stmt           go to state 14
    return_stmt    go to state 15
    when_stmt      go to state 16
    whilst_stmt    go to state 17
    dowhilst_stmt  go to state 18
    function       go to state 19
    type           go to state 20
    declaration    go to state 21
    assignment     go to state 22


State 122

    4 stmts: stmts • stmt
   35 else_stmt: ELSE $@5 LC stmts • RC

    IDENTIFIER  shift, and go to state 4
    RC          shift, and go to state 123
    WHEN        shift, and go to state 5
    WHILST      shift, and go to state 6
    DO          shift, and go to state 7
    READ        shift, and go to state 8
    WRITE       shift, and go to state 9
    VOID        shift, and go to state 10
    INT         shift, and go to state 11
    RETURN      shift, and go to state 12

    stmt           go to state 41
    return_stmt    go to state 15
    when_stmt      go to state 16
    whilst_stmt    go to state 17
    dowhilst_stmt  go to state 18
    function       go to state 19
    type           go to state 20
    declaration    go to state 21
    assignment     go to state 22


State 123

   35 else_stmt: ELSE $@5 LC stmts RC •

    $default  reduce using rule 35 (else_stmt)
